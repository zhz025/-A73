<!DOCTYPE html>
<html>
<head>
	<title>homepage</title>
	<meta charset="utf-8">
		<meta name="viewport" content="width=device-width, initial-scale=1.0"/>

	<link rel="stylesheet" type="text/css" href="css/Planforme.css">
	<script src="/js/jquery.js"></script>
	
</head>

<body>
<div id="box">
	<div id="header" style="text-align: center;">
		Plan for me
	</div>
	<div class="step" step='1'>
		<div id="jsonWrap">
					{{#each assignment}}
						{{#if isFinish}}

						{{else}}
							<div class="objS">
								<input type="checkbox" name="cb" data-id="{{id}}">
									<h4 class="highColor">{{name}}</h4>
									<h4>{{classN}}</h4>
									<h3>Due Date: {{formatDate date}}</h3>
									<h3>Time Left: {{countTime date}} days</h3>
							</div>
							{{/if}}
					{{/each}}
		</div>
		<div id="continue">
			<button  onclick="to(1,2)">
				continue
			</button>
		</div>
	</div>

	<div class="step" step='2'>
		<div id="jsonWrap">
			<h4>How long do you want to study for?</h4>

			<div class="timeset">
				<input type="number" class="time" min="0"> hour 
				<input type="number" class="time" min="0"> min
			</div>
			
			<div id="warning" >
				{{!-- minute --}}
				<div class="top">
					<span class="needTimeTip"></span> might bot be sufficient to complete the selected assignments. Do you want to continue?
				</div>
				<button onclick="Yesto()">Yes</button>
				<button onclick="WarningModel('hide')">Edit Time</button>
			</div>
		</div>

		<div class="operating"  >
			<button onclick="to(2,3)">
				continue
			</button>
		</div>
	</div>

	<div class="step" step='3'>
		<div id="jsonWrap">
		</div>
		<div class="operating"  >
			<button onclick="to(3,4)">
				Start
			</button>
		</div>
	</div>

	<div class="step" step='4'>

			<div id="jsonWrap">
				<div id="startInfo">
					<p class="highColor name"></p>
					<p class="class"></p>
					<p class="Countdown">
						
					</p>
				</div> 
			</div>

			<div id="finish" >
				{{!-- minute --}}
				<div class="top">
					Have you complete all the assignment?
				</div>
				<button onclick="finish('yes')">Yes</button>
				<button onclick="finish('no')">No</button>
			</div>
	</div>

	</div>
	


	
	<div id="back">
		<a href="/"><img src="photo/arrow.png"></a>
	</div>

</div>

<script>
	function Yesto() {
		window.needTime = 0
		WarningModel('hide')
		to(2,3)
	}
	
	function finish(yes) {
		if(yes) {
			var ids = ''
			WillDo.forEach(item=>{
					ids += ',' + item.id
			})
			ids = ids.slice(1)

			$.post("/api/FinishAssignment",{id: ids},function(data){
				if(data.code == 0) {
					$("#finish").hide()
					location.href = '/'
				}
			})
		} else {
			location.href = '/'
		}
	}

	
	function to(curr,to) {
		if (window.isModal) {
			return
		}

		if(curr == 4 && to == 3) {
			$("#finish").hide()
			$("#startInfo .name").html("")
			$("#startInfo .classN").html("")
			$("#startInfo .Countdown").html("")
			window.WillDo.forEach(function(item) {
				if(item.Interval_id !== undefined) {
					clearInterval(item.Interval_id)
				} 
				if(item.Timeout_id !== undefined) {
					clearTimeout(item.Timeout_id)
				} 
			})
		}
		if(to == 1) {
			tonext(curr,to)
		}
		if(to == 2) {

			var hasCheckItem = []
			$("[name='cb']").each(function(index,item){
				if(item.checked) {
					hasCheckItem.push(item.dataset['id'])
				}
			})
			if (hasCheckItem.length == 0) {
				alert("Please select one!!!")
				return
			} 

			$.post("/api/AssignmentList/",{id: hasCheckItem.join(",")},function(data) {
				if (data.code==0) {
					window.needTime  = 0
					window.WillDo = data.data 
					data.data.forEach(function(item){
						window.needTime += parseInt(item.time)
					})
					
					tonext(curr,to)
				}
			})
		}
		
		if(to == 3) {
			var hour = parseInt($(".time")[0].value || 0)
			var minute = parseInt($(".time")[1].value || 0)

			if (!minute && !hour) {
				alert("Please input time!!!!")
				return
			}
			if ( (hour * 60 + minute) < window.needTime ) {
				var text = hour ? (hour + " hour ") : ""
				text += minute ? (minute + " minute") : ""
				$(".needTimeTip").text(text)
				WarningModel('show')
			} else {
				tonext(curr,to)
				var text = ''

				if (window.WillDo.length == 1) {
					var item = window.WillDo[0];
					var needTime = (hour * 60 + minute)
					item.currTime = parseInt(item.time)
					if(item.currTime >  needTime) {
						item.currTime = needTime
					} 
					$(".step[step='3'] #jsonWrap").html(`
						<div class="List" >
							<div>
								${item.currTime} mins
							</div>
							<div>
								<p class="highColor">${item.name}</p>
								<p >${item.name}</p>
							</div>
						</div>
						`)
						return
				}
				var num = window.WillDo.length;
				var needTime = (hour * 60 + minute)
				var one = Math.floor( (needTime - (num - 1) * 10)  / num )
				window.WillDo.forEach(function(item,index){
					item.currTime = one
						text += `
						<div class="List" >
							<div>
								${one} mins
							</div>
							<div>
								<p class="highColor">${item.name}</p>
								<p >${item.name}</p>
							</div>
						</div>
						`
					if(index !== (window.WillDo.length - 1)) {
						text += ` <div class="List" >
							<div>
								10 mins
							</div>
							<div>
								<p class="break highColor">break</p>
							</div>
						</div>`
					}
				})

				$(".step[step='3'] #jsonWrap").html(text)
				
			}
		}


		if(to == 4) {
			tonext(curr,to)
			if(window.WillDo.length == 1) {
				Countdown(window.WillDo[0],false)
				return
			}
			for(let i =0;i < window.WillDo.length ; i++) {
				let item = window.WillDo[i]
				let currTime = item.currTime	
				
				if(i == 0) {
					Countdown(item,true)
				} else {
					let stopTime = 0;
					stopTime +=  (currTime * 60 * 1000 + 10 * 60 * 1000) * i
					window.WillDo[i-1].time
					item.Timeout_id = setTimeout(()=>{
						console.log(window.WillDo[i-1].useTime," ===执行===")
						Countdown(item,window.WillDo.length !== (i+1))
					}, window.WillDo[i-1].useTime)
				}
				
			}
			
		}
		
		

	}

	function Countdown(item,hasBreak) {
		item.currTime = item.currTime * 60 * 1000 
		item.useTime = item.currTime
		if(hasBreak) {
			item.currTime += 10 * 60 * 1000 
			item.useTime = item.currTime
			item.Interval_id = setInterval(function() {
				item.currTime -= 1000
				
				if(item.currTime <= 0) {
					clearInterval(item.Interval_id)
					$(".Countdown").html(`0 min 0 sec`)
					return
				}

				if(item.currTime <= (1000 * 60 * 10) ) {
					$("#startInfo .name").html("Break")
					$("#startInfo .class").html("")
					$(".Countdown").html(`${ parseInt(item.currTime / (60 * 1000)) } min ${ (item.currTime % (60 * 1000)) / 1000 } sec`)
				} else {
					$("#startInfo .name").html(item.name)
					$("#startInfo .class").html(item.classN)
					var hasTime = (item.currTime - (1000 * 60 * 10))
					$(".Countdown").html(`${ parseInt(hasTime / (60 * 1000)) } min ${ (hasTime % (60 * 1000))/1000 } sec`)
				}

			},1000)
		} else {
			item.Interval_id = setInterval(function() {
				item.currTime -= 1000
				if(item.currTime <= 0) {
					clearInterval(item.Interval_id)
					AllFinish()
					return
				}
				$("#startInfo .name").html(item.name)
				$("#startInfo .class").html(item.classN)
				$(".Countdown").html(`${ parseInt(item.currTime / (60 * 1000)) } min ${ (item.currTime % (60 * 1000)) / 1000 } sec`)

			},1000)
		}
	}

	function tonext(curr,to){
		if(to !== 1 && curr < to) {
			$("#back>a").attr("href",`javascript:to(${to},${curr})`)
		} else if(to == 1){
			$("#back>a").attr("href","/")
		} else if(to !== 1){
			$("#back>a").attr("href",`javascript:to(${to},${to-1})`)
		}

		$(".step").hide()
		$("[step="+to+"]").show()
	}


	function AllFinish() {
		$("#startInfo .name").html("all finished")
		$("#startInfo .class").html("")
		$(".Countdown").html(`0 min 0 sec`)
		$("#finish").show()
	}
	function WarningModel(target) {
		if(target == 'show') {
			$("#warning").show()
			window.isModal = true
		} else {
			$("#warning").hide()
			window.isModal = false
		}
	}
</script>
</body>
</html>